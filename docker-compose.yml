version: "3.9"

services:
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: frontend-container
    ports:
      - "3000:80"  # Nginx 서빙
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: backend-container
    ports:
      - "9000:9000"  # FastAPI
    env_file:
      # Jenkins 워크스페이스 기준 절대경로
      - /var/lib/jenkins/workspace/frontend-pipeline/server/.env
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    container_name: postgres-container
    environment:
      POSTGRES_DB: ww
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 6363
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d ww"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
